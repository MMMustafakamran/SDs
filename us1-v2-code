@startuml
autonumber
actor Actor as "Student/Teacher/Counsellor"
participant Router as "React Router"
participant LoginForm as "LoginForm (React)"
participant AuthAPI as "/api/login/"
participant Storage as "Local Storage"
participant DashboardView as "DashboardView.get()"
participant Dashboard as "Role Dashboard (React)"
participant ProfilePage as "ProfilePage (React)"
participant SubjectsAPI as "/api/subjects/"
participant UpdateProfileView as "UpdateProfileView.put()"
participant UserSerializer as "UserSerializer"
participant CustomUser as "CustomUser model"

Actor -> LoginForm: Enter username & password
LoginForm -> AuthAPI: POST credentials

alt Valid credentials
    AuthAPI --> LoginForm: JWT access + refresh tokens
    LoginForm -> Storage: Save tokens
    LoginForm -> Router: Trigger dashboard load
    Router -> DashboardView: GET /dashboard
    DashboardView --> Router: Profile snapshot + role flag
    Router -> Dashboard: Render dashboard based on role
else Invalid credentials
    AuthAPI --> LoginForm: 401 Unauthorized
    LoginForm --> Actor: Show error toast
    return
end

Dashboard -> ProfilePage: Mount profile component
ProfilePage -> DashboardView: GET /dashboard (prefill form)
DashboardView --> ProfilePage: Profile fields + subject ids
ProfilePage --> Actor: Display editable form

loop On teacher role
    ProfilePage -> SubjectsAPI: GET subject list (Bearer token)
    SubjectsAPI --> ProfilePage: Available subjects
    Actor -> ProfilePage: Add new subject
    ProfilePage -> SubjectsAPI: POST new subject name
    SubjectsAPI --> ProfilePage: Created subject id
end

Actor -> ProfilePage: Submit profile updates
ProfilePage -> UpdateProfileView: PUT JSON payload (Bearer token)
UpdateProfileView -> UpdateProfileView: Check email_verified

alt Email not verified
    UpdateProfileView --> ProfilePage: 403 Verification required
    ProfilePage --> Actor: Prompt to verify email
else Email verified
    UpdateProfileView -> UserSerializer: Validate & map fields

    alt Validation failure or duplicate email
        UserSerializer --> UpdateProfileView: Field errors
        UpdateProfileView --> ProfilePage: 400 + error details
        ProfilePage --> Actor: Highlight invalid inputs
    else Input valid
        UserSerializer -> CustomUser: Update attributes & subjects
        CustomUser --> UserSerializer: Persisted profile
        UserSerializer --> UpdateProfileView: Updated instance
        UpdateProfileView --> ProfilePage: 200 Success message
        ProfilePage --> Actor: Show toast & refresh view
    end
end
@enduml